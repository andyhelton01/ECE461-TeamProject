#!/bin/bash


cd ./ECE461_CLI

if [[ $1 == "help" ]]
then
    echo "possible commands: help install uninstall build clean test run"
elif [[ $1 == "install" ]]
then
    chmod +x ../scripts/install_dependancies.sh
    ../scripts/install_dependancies.sh
elif [[ $1 == "uninstall" ]]
then
    chmod +x ../scripts/uninstall_dependancies.sh
    ../scripts/uninstall_dependancies.sh
elif [[ $1 == "build" ]]
then
    # echo "hacking your computer..."
    # compile process 
    dotnet build
    # echo "successfully hacked"
elif [[ $1 == "clean" ]]
then
    # echo "Deleting your files..."
    dotnet clean
elif [[ $1 == "test" ]]
then
    cd ..
    dotnet test  --logger:"trx;LogFileName=./TestOutput.xml" --collect:"XPlat Code Coverage" > "$LOG_FILE"

    # Tests
    tests_total=$(grep -Po 'total=\"\K[0-9]+' ./ECE461_CLI.Tests/TestResults/TestOutput.xml)
    tests_passed=$(grep -Po 'passed=\"\K[0-9]+' ./ECE461_CLI.Tests/TestResults/TestOutput.xml)
    echo "Total: $tests_total"
    echo "Passed: $tests_passed"

    # Coverage
    lines_covered=$(grep -Po 'lines-covered=\"\K[0-9]+' ./ECE461_CLI.Tests/TestResults/*/coverage.cobertura.xml)
    lines_valid=$(grep -Po 'lines-valid=\"\K[0-9]+' ./ECE461_CLI.Tests/TestResults/*/coverage.cobertura.xml)
    echo "Coverage: $(($lines_covered*100 / $lines_valid))%"

    rm -r ./ECE461_CLI.Tests/TestResults
else
    # echo "thank you for your personal information!"
    # echo "executing virus..."

    # run process
    dotnet run "$@"
fi


